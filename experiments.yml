experiments:
  - name: stGreedy
    args: ['robustness', '-a1', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 43200
  - name: simplStoch
    args: ['robustness', '-a2', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 43200
  - name: simplStochDyn # simplStoch with LinAlg solver instead of full Lpinv
    args: ['robustness', '-a3', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 43200
  - name: colStoch
    args: ['robustness', '-a6', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 43200
  - name: specStoch
    args: ['robustness', '-a7', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 43200
  - name: exhaustive-search
    args: ['robustness', '-a8', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k] 
    
  # the '*_single' experiments are configured such that slurm allocates all cores on a node of our cluster, preventing interferences from other runs.
  - name: stGreedy_single
    args: ['robustness', '-a1', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 21600
    procs_per_node: 24
    num_threads: 24
  - name: simplStoch_single
    args: ['robustness', '-a2', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 21600
    procs_per_node: 24
    num_threads: 24
  - name: simplStochDyn_single
    args: ['robustness', '-a3', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 21600
    procs_per_node: 24
    num_threads: 24
  - name: colStoch_single
    args: ['robustness', '-a6', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 21600
    procs_per_node: 24
    num_threads: 24
  - name: specStoch_single
    args: ['robustness', '-a7', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    timeout: 21600
    procs_per_node: 24
    num_threads: 24

builds:
  - name: graph-robustness-k
    git: https://github.com/hu-macsy/2023-KGRIP-KLRIP
    recursive-clone: true
    configure:
      - args:
        - 'cmake'
        - '@THIS_SOURCE_DIR@'
        - '-DCMAKE_INSTALL_PREFIX=@THIS_PREFIX_DIR@'
        - '-DCMAKE_BUILD_TYPE=Release'
    compile:
      - args:
        - 'make'
        - '-j@PARALLELISM@'
    install:
      - args:
        - 'make'
        - 'install'

revisions:
  - name: k-grip
    build_version:
      'graph-robustness-k': '13ac360771b7a3e8baf2c5d13a658f156b8002c6'
  - name: k-lrip
    build_version:
      'graph-robustness-k': '00b965f011b1c195df60aead3a5a1000b05f3bce'

variants:
  - axis: 'k-size'
    items:
      - name: 'k-2'
        extra_args: ['--k-factor', '2']
      - name: 'k-5'
        extra_args: ['--k-factor', '5']
      - name: 'k-20'
        extra_args: ['--k-factor', '20']
      - name: 'k-50'
        extra_args: ['--k-factor', '50']
      - name: 'k-100'
        extra_args: ['--k-factor', '100']

  - axis: 'accuracy'
    items:
      - name: 'eps_0.9'
        extra_args: ['-eps', '0.9']
      - name: 'eps_0.99'
        extra_args: ['-eps', '0.99']
    
  - axis: 'ne'
    items:
      - name: 'ne_50'
        extra_args: ['-ne', '50']
      - name: 'ne_80'
        extra_args: ['-ne', '80']

  - axis: 'accuracy_trees'
    items:
      - name: 'eps2_10'
        extra_args: ['-eps2', '10']

  - axis: 'linalg'
    items:
      - name: 'lamg'
        extra_args: ['--lamg']
      - name: 'dense-lu'
        extra_args: ['--lu']
      - name: 'jlt-lu'
        extra_args: ['--jlt-lu']
      - name: 'jlt-lamg'
        extra_args: ['--jlt-lamg']
  - axis: 'heuristic'
    items:
      - name: 'random'
        extra_args: ['-h0']
      - name: 'ust-diag'
        extra_args: ['-h1']
      - name: 'similarity'
        extra_args: ['-h2']
  - axis: 'num-focus-nodes'
    items:
      - name: 'focus-100'
        extra_args: ['-nf', '100']
      - name: 'focus-50'
        extra_args: ['-nf', '50']
      - name: 'focus-25'
        extra_args: ['-nf', '25']
  - axis: 'focus-seed'
    items:
      - name: 'fseed1'
        extra_args: ['--focus-seed', '1']

        
instdir: "/work/global/robustness_graphs"
instances:
  - repo: local
    set: [medium-graphs]
    items: 
      - inf-power.nkb
      - facebook_ego_combined
      - web-spam.nkb
      - wiki-Vote.nkb
      - p2p-Gnutella09.nkb
      - p2p-Gnutella04.nkb
      - web-indochina-2004.nkb
      - arxiv-heph.nkb
      - web-webbase-2001.nkb
      - arxiv-astro-ph.nkb
      - as-caida20071105.nkb
      - cit-HepTh.nkb
      - ia-email-EU.nkb
  - repo: local
    set: [large-graphs]
    items: 
      - loc-brightkite_edges.nkb
      - soc-Slashdot0902.nkb
      - ia-wiki-Talk.nkb
      - livemocha.nkb
      - road-usroads.nkb
      - flickrEdges.nkb


matrix:
  include:
    ## Configuration experiments

    # performance of simplStoch for different accuracy values
    - experiments: ['simplStoch']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy']
      revisions: [k-grip]
    
    - experiments: ['simplStoch']
      instsets: ['large-graphs']
      axes: ['k-size', 'accuracy']
      variants: ['k-2','k-20','eps_0.99']
      revisions: [k-grip]
    
    
    ## k-GRIP
    # medium graphs:
    - experiments: ['stGreedy']
      instsets: ['medium-graphs']
      axes: ['k-size']
      revisions: [k-grip]

    - experiments: ['simplStoch']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy']
      variants: ['eps_0.9']
      revisions: [k-grip]
      
    - experiments: ['simplStochDyn'] # with JLT LinAlg solvers this is simplStochJLT
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy', 'linalg']
      variants: ['eps_0.9', 'jlt-lu']
      revisions: [k-grip]

    - experiments: ['colStoch'] # colStoch and colStochJLT (depending on LinAlg variant)
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy', 'linalg', 'accuracy_trees', 'heuristic']
      variants: ['eps_0.9', 'dense-lu', 'jlt-lu', 'ust-diag']
      revisions: [k-grip]

    - experiments: ['specStoch']
      instsets: ['medium-graphs']
      axes: ['k-size', 'ne', 'linalg']
      variants: ['ne_50', 'dense-lu']
      revisions: [k-grip]

    # large graphs: (TODO)


    ## k-LRIP
    - experiments: ['stGreedy_single']
      instsets: ['medium-graphs']
      axes: ['k-size', 'num-focus-nodes', 'focus-seed']
      variants: ['focus-25', 'k-2', 'k-5', 'k-20']
      revisions: [k-lrip]

    - experiments: ['simplStoch_single']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy', 'num-focus-nodes', 'focus-seed']
      variants: ['eps_0.9', 'focus-25', 'k-2', 'k-5', 'k-20']
      revisions: [k-lrip]
      
    - experiments: ['simplStochDyn_single'] # with JLT LinAlg solvers this is simplStochJLT
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy', 'linalg', 'num-focus-nodes', 'focus-seed']
      variants: ['eps_0.9', 'jlt-lu', 'focus-25', 'k-2', 'k-5', 'k-20']
      revisions: [k-lrip]

    - experiments: ['colStoch_single'] # colStoch and colStochJLT (depending on LinAlg variant)
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy', 'linalg', 'accuracy_trees', 'heuristic', 'num-focus-nodes', 'focus-seed']
      variants: ['eps_0.9', 'dense-lu', 'jlt-lu', 'ust-diag', 'focus-25', 'k-2', 'k-5', 'k-20']
      revisions: [k-lrip]

    - experiments: ['specStoch_single']
      instsets: ['medium-graphs']
      axes: ['k-size', 'ne', 'linalg', 'num-focus-nodes', 'focus-seed']
      variants: ['ne_50', 'dense-lu', 'focus-25', 'k-2', 'k-5', 'k-20']
      revisions: [k-lrip]
  
