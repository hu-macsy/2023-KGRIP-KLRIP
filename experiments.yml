experiments:
  - name: stGreedy
    args: ['./build/robustness', '-a1', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
  - name: simplStoch
    args: ['./build/robustness', '-a2', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
  - name: colStoch
    args: ['./build/robustness', '-a3', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ] # hier war --lamg drin. aber das passt nicht zum paper. also rausgenommen (und es ist ja auch ein variant)
    stdout: out
    use_builds: [graph-robustness-k]
  - name: simplStochJLT
    args: ['./build/robustness', '-a5', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
  - name: colStochJLT
    args: ['./build/robustness', '-a6', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
    #slurm_args: ['--partition=single', '--nodelist=ego']
  - name: specStoch
    args: ['./build/robustness', '-a7', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]
  - name: exhaustive-search
    args: ['./build/robustness', '-a8', '-i', '@INSTANCE@', '@EXTRA_ARGS@', ]
    stdout: out
    use_builds: [graph-robustness-k]

builds:
  - name: graph-robustness-k
    git: https://github.com/predari/graph-robustness-k
    recursive-clone: true
    configure:
      - args:
        - 'cmake'
        - '@THIS_CLONE_DIR@'
        - '-DCMAKE_BUILD_TYPE=Release'
    compile:
      - args:
        - 'make'
        - '-j@PARALLELISM@'

revisions:
  - name: k-grip
    build_version:
      'graph-robustness-k': '8f09202598e3e1b4245ee280ced05c61c8fc22e9'

variants:
  - axis: 'k-size'
    items:
      - name: 'k-2'
        extra_args: ['--k-factor', '2']
      - name: 'k-5'
        extra_args: ['--k-factor', '5']
      - name: 'k-20'
        extra_args: ['--k-factor', '20']
      - name: 'k-50'
        extra_args: ['--k-factor', '50']
      - name: 'k-100'
        extra_args: ['--k-factor', '100']

  - axis: 'accuracy'
    items:
      - name: 'eps_0.9'
        extra_args: ['-eps', '0.9']
      - name: 'eps_0.99'
        extra_args: ['-eps', '0.99']
    
  - axis: 'ne'
    items:
      - name: 'ne_50'
        extra_args: ['-ne', '50']
      - name: 'ne_80'
        extra_args: ['-ne', '80']

  - axis: 'accuracy_trees'
    items:
      - name: 'eps2_10'
        extra_args: ['-eps2', '10']

  - axis: 'linalg'
    items:
      - name: 'lamg'
        extra_args: ['--lamg']
      - name: 'dense-lu'
        extra_args: ['--lu']
      - name: 'jlt-lu'
        extra_args: ['--jlt-lu']
      - name: 'jlt-lamg'
        extra_args: ['--jlt-lamg']
  - axis: 'heuristic'
    items:
      - name: 'random'
        extra_args: ['-h0']
      - name: 'ust-diag'
        extra_args: ['-h1']
      - name: 'similarity'
        extra_args: ['-h2']

        
# instdir: "/work/global/robustness_graphs"
instdir: "instances"
instances:
  - repo: local
    set: [medium-graphs, additional-exhaustive-search]
    items: 
      - inf-power.nkb
      - facebook_ego_combined
      - web-spam.nkb
      - wiki-Vote.nkb
      - p2p-Gnutella09.nkb
      - p2p-Gnutella04.nkb
      - web-indochina-2004.nkb
      - arxiv-heph.nkb
  - repo: local
    set: [medium-graphs]
    items:
    - web-webbase-2001.nkb
    - arxiv-astro-ph.nkb
    - as-caida20071105.nkb
    - cit-HepTh.nkb
    - ia-email-EU.nkb
  - repo: local
    set: [large-graphs]
    items: 
      - loc-brightkite_edges.nkb
      - soc-Slashdot0902.nkb
      - ia-wiki-Talk.nkb
      - livemocha.nkb
      - road-usroads.nkb
      - flickrEdges.nkb
  - repo: local
    set: [configuration-exp-exhaustive-search]
    items:
      - erdos_renyi_1000_0.02.nkb
      - watts_strogatz_1000_7_0.3.nkb
      - barabasi_albert_2_1000_2.nkb

# matrix constructed from paper description
matrix:
  include:
    ## Configuration experiments

    # Verfiy stGreedy quality
    - experiments: ['stGreedy', 'exhaustive-search']
      instsets: ['configuration-exp-exhaustive-search']
      axes: ['k-size']
      revisions: [k-grip]

    # performance of simplStoch for different accuracy values
    - experiments: ['simplStoch']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy']
      revisions: [k-grip]
    
    # determine quality of the gain approx (eq 15) for specStoch
    # todo?

    # different solvers for the solution of laplacian linear systems
    # todo/nicht so eindeutig was angeguckt wurde

    
    ## comparision to state of the art
    # medium graphs:
    - experiments: ['stGreedy']
      instsets: ['medium-graphs']
      axes: ['k-size']
      revisions: [k-grip]

    - experiments: ['simplStoch']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy']
      variants: ['eps_0.9']
      revisions: [k-grip]

    - experiments: ['colStoch']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy', 'linalg']
      variants: ['eps_0.9', 'dense-lu']
      revisions: [k-grip]

    - experiments: ['simplStochJLT']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy']
      revisions: [k-grip]

    - experiments: ['colStochJLT']
      instsets: ['medium-graphs']
      axes: ['k-size', 'accuracy', 'linalg', 'accuracy_trees', 'heuristic']
      variants: ['eps_0.9', 'dense-lu', 'ust-diag']
      revisions: [k-grip]

    - experiments: ['specStoch']
      instsets: ['medium-graphs']
      axes: ['k-size', 'ne']
      variants: ['ne_50']
      revisions: [k-grip]

    # large graphs: (TODO)


    ## new stuff

    # run exhaustive search on some medium graphs
    - experiments: ['exhaustive-search']
      instsets: ['additional-exhaustive-search']
      axes: ['k-size']
      revisions: [k-grip]
  
